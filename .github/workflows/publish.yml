# Publish
#
# Deploy to Vercel when a GitHub release is published or on workflow dispatch.
#
# References:
#
# - https://docs.github.com/actions/learn-github-actions/contexts
# - https://docs.github.com/actions/learn-github-actions/expressions
# - https://docs.github.com/actions/using-workflows/events-that-trigger-workflows#release
# - https://docs.github.com/actions/using-workflows/events-that-trigger-workflows#workflow_dispatch
# - https://docs.github.com/actions/using-workflows/workflow-commands-for-github-actions
# - https://docs.github.com/webhooks-and-events/webhooks/webhook-events-and-payloads#release
# - https://docs.github.com/webhooks-and-events/webhooks/webhook-events-and-payloads#workflow_dispatch
# - https://github.com/actions/checkout
# - https://github.com/actions/setup-node
# - https://github.com/actions/setup-node/blob/main/docs/advanced-usage.md#yarn2-configuration
# - https://github.com/hmarr/debug-action
# - https://vercel.com/docs/cli/build
# - https://vercel.com/docs/cli/deploy
# - https://vercel.com/docs/cli/pull

---
name: publish
on:
  release:
    types:
      - published
  workflow_dispatch:
    inputs:
      tag:
        description: release tag
        required: true
        type: string
concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ inputs.tag || github.ref_name }}
jobs:
  preflight:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.result }}
    steps:
      - id: debug
        name: Print environment variables and event payload
        uses: hmarr/debug-action@v3.0.0
      - id: checkout
        name: Checkout ${{ github.ref_name }}
        uses: actions/checkout@v4.2.2
        with:
          persist-credentials: false
          ref: ${{ github.ref }}
      - id: version
        name: Get version
        run: echo "result=$(jq .version package.json -r)" >>$GITHUB_OUTPUT
      - id: dist-tag
        name: Get dist tag
        uses: flex-development/dist-tag-action@1.1.2
        with:
          target: ${{ steps.version.outputs.result }}
  deploy:
    needs: preflight
    runs-on: ubuntu-latest
    environment: production
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - id: checkout
        name: Checkout ${{ github.ref_name }}
        uses: actions/checkout@v4.2.2
        with:
          persist-credentials: false
          ref: ${{ github.ref }}
      - id: node
        name: Setup Node.js
        uses: actions/setup-node@v4.4.0
        with:
          cache: yarn
          cache-dependency-path: yarn.lock
          node-version-file: .nvmrc
      - id: yarn
        name: Install dependencies
        run: yarn --no-immutable && echo "$GITHUB_WORKSPACE/node_modules/.bin" >>$GITHUB_PATH
      - id: env
        name: Pull environment
        run: vercel pull --environment=production --yes --token=${{ secrets.VERCEL_TOKEN }}
      - id: build
        name: Build site
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - id: deploy
        name: Deploy site
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
